@import "./variables/index.css";
@import "./fonts.css";

* {
	box-sizing: border-box;
}
html, body {
	margin: 0;
	padding: 0;
}

@import '../../node_modules/mozilla-tabzilla/css/tabzilla.css';

body {
	font-family: $baseFontFamily;
	@extend base-rhythm;
	-webkit-text-size-adjust: 100%;
	/*background-image: radial-gradient(ellipse farthest-side at top left, #00549e 0, #000 100%);
	background-size: 100% 500px;
	background-repeat: no-repeat;
	background-position: top center;*/
	color: $textColorPrimary;
	background: #fff;
}

a {
  color: $linkBlue;
  text-decoration: none;
  &:hover, &:focus, &:active {
    color: $linkBlue;
    text-decoration: underline;
  }
}

.row {
	display: flex;
	@media (min-width: $breakDesktop) {
		display: flex;
		justify-content: center;
	}
}
.row-inner {
	min-width: 300px;
	max-width: 1020px;
}
header {
	background: $developerBlueVibrant;
}
header .row-inner {
	flex: 1;
	padding: 0 0 calc($gutterY / 2) $gutterX;
}
#tabzilla {
	display: none;
	@media (min-width: $breakTablet) {
		display: block;
	}
}
#title {
	display: flex;
	flex-direction: row;
	padding-top: calc($gutterY / 2);
	@media (min-width: $breakMobileLandscape) {
		padding-top: $gutterY;
	}
}
h1 {
	margin: 0;
	padding: 0;
	text-indent: -9999px;
	height: calc($gutterY * 2);
	width: calc($gutterY * 2);
	background-image: url('images/browsers/firefox.svg');
	background-repeat: no-repeat;
	background-size: contain;
	display: block;
	@extend h1;
	/*@extend h1;
	padding-top: $gutterY;
	margin-bottom: 0;
	letter-spacing: -.035em;
	color: #fff;
	font-weight: 600;*/
	@media (min-width: $breakMobileLandscape) {
		height: calc($gutterY * 3);
		width: calc($gutterY * 3);
	}
}
h2 {
	margin: 0;
	color: #fff;
	margin-left: calc($gutterX);
	font-size: $h3FontSize;
	line-height: calc($gutterY * 2);
	font-weight: 300;
	letter-spacing: -.035em;
	@media (min-width: $breakMobileLandscape) {
		margin-left: calc($gutterX * 2);
		font-size: $h2FontSize;
		line-height: calc($gutterY * 1.5);
		@media (min-width: $breakTablet) {
			margin-left: calc($gutterX * 3);
		}
	}
	small {
		display: none;
		letter-spacing: normal;
		font-style: italic;
		color: $lightGray;
		font-size: $h4FontSize;
	  line-height: calc($gutterY * 1.5);
		@media (min-width: $breakMobileLandscape) {
			display: block;
		}
	}
}

article {
	background-color: #fff;
}

#features {
	list-style: none;
	margin: calc($gutterY) 0;
	padding: 0;
}

.feature {
	margin: 0;
	padding: 0;
	padding-left: $gutterX;
	@media (min-width: $breakMobileLandscape) {
		padding: calc($gutterX / 2) $gutterX;
	}
}
.feature:hover, .feature:focus {
	outline: none;
	background-color: $backgroundLightWarm;
}
.feature-header {
	display: flex;
	flex-direction: row;
  min-width: 0;
}
.feature-title {
	flex: 1;
	@extend truncate-text;
	@extend h5;
	padding-top: 0;
	margin-bottom: 0;
	line-height: calc($gutterY * 2);
	padding-right: $gutterX;
	font-weight: 600;
	@media (min-width: $breakMobileLandscape) {
		font-size: $h3FontSize;
		letter-spacing: -.035em;
		font-weight: 300;
		@media (min-width: $breakDesktopWide) {
			font-size: $h2FontSize;
		}
	}
}

.feature-meta {
	padding-top: calc($gutterY / 2);
	padding-bottom: calc($gutterY / 1.5);
	display: none;
	color: $textColorTertiary;
	@media (min-width: $breakMobileLandscape) {
		display: block;
	}
}
@media (max-width: $breakMobileLandscape) {
	.feature:focus .feature-meta {
		display: block;
	}
}
.feature-summary {
	margin: 0;
	padding-bottom: calc($gutterY / 2);
}
.feature-links {
	ul {
		list-style: none;
		margin: 0;
		padding: 0;
	}
	li {
		display: inline-block;
		margin-right: calc($gutterX / 2);
	}
	a {
		color: $linkBlue;
		&:hover, &:focus, &:active {
			color: $linkBlue;
		}
	}
}
.icon {
	display: inline-block;
	background-position: center;
	background-repeat: no-repeat;
	width: $gutterY;
	height: $gutterX;
	background-size: $gutterX;
	margin-right: $gutterX / 2;
}
.icon-spec {
	background-image: url('images/html5.png');
	@media (min-resolution: 2dppx) {
		background-image: url('images/html5@2x.png');
	}
}
.icon-mdn {
	background-image: url('images/mdn.png');
	@media (min-resolution: 2dppx) {
		background-image: url('images/mdn@2x.png');
	}
}
.icon-bugzilla {
	background-image: url('images/bugzilla.png');
	@media (min-resolution: 2dppx) {
		background-image: url('images/bugzilla@2x.png');
	}
}
.icon-samples {
	background-image: url('images/github.png');
	@media (min-resolution: 2dppx) {
		background-image: url('images/github@2x.png');
	}
}

.feature-status ul {
	list-style: none;
	margin: 0;
	padding: 0;
	display: flex;
	flex-direction: row;
	height: calc($gutterY * 2);
}
.status {
	list-style: none;
	position: relative;
	margin: 0;
	padding: 0;
	width: calc($gutterY);
	border-right: 0.15rem solid transparent;

	color: $textColorSecondary;
	font-weight: 600;
	font-size: $smallFontSize;
	text-transform: uppercase;

	@media (min-width: $breakTablet) {
		color: #fff;
		font-weight: 600;
		font-size: $fontSize;
		text-shadow: 1px 1px 0 rgba(0, 0, 0, 0.3), 0 0 1px rgba(0, 0, 0, 0.3);
		width: calc($gutterY * 6);
		transition: transform 0.2s ease-in-out;
		border-top: none;
		@media (min-width: $breakDesktop) {
			font-size: $fontSize;
			width: calc($gutterY * 8);
		}
	}
}
.icon-browser {
	position: absolute;
	width: 32px;
	height: 32px;
	top: -16px;
	left: -16px;
	transform: translate(calc($gutterX + 3px), calc($gutterY * 1.5)) scale(0.5);
	transform-origin: left center;
	background-repeat: no-repeat;
	background-position: center;
	background-size: 32px;
	@extend hide-text;
	@media (min-width: $breakTablet) {
		transform: translate(calc($gutterX * 1.5), calc($gutterY));
	}
	filter: drop-shadow(1px 1px 1px rgba(0, 0, 0, 0.1));
}
.state-firefox {
	.icon-browser {
		background-image: url('images/browsers/firefox_64x64.png');
	}
	/*@media (min-width: $breakTablet) {
		background-size: 48px;
		width: calc($gutterY * 8);
		background-position: 50% calc($gutterY - 5px);
		.status-text {
			display: flex;
		}
	}*/
}
.state-chrome {
	.icon-browser {
		background-image: url('images/browsers/chrome_64x64.png');
	}
}
.state-edge {
	.icon-browser {
		background-image: url('images/browsers/edge_64x64.png');
	}
}
.state-webkit {
	.icon-browser {
		background-image: url('images/browsers/safari_64x64.png');
	}
}
.status-inner {
	color: inherit;
	display: block;
	height: 100%;
	&:hover, &:focus, &:active {
    text-decoration: none;
		color: inherit;
  }
}

$stateUnknown: $lightGray;
$stateNotPlanned: $firefoxOrange;
$stateDeprecated: $firefoxOrange;
$stateConsidering: $marketOrange;
$stateDeveloping: $flameYellow;
$stateShipped: $geckoGreen;

$stateUnknownLight: $lightGray;
$stateNotPlannedLight: $firefoxOrangeTint;
$stateDeprecatedLight: $firefoxOrangeTint;
$stateConsideringLight: $marketOrangeTint;
$stateDevelopingLight: $flameYellowTint;
$stateShippedLight: $geckoGreenTint;

$stateShade: -10%;
$stateAlpha: 50%;
$fadeStart: 70%;
$fadeMid: 10%;
$fadeHeight: 25%;

.status.state-unknown {
	background-color: $stateUnknownLight;
	border-color: color($stateUnknownLight lightness($stateShade) alpha($stateAlpha));
	@media (min-width: $breakTablet) {
		background-color: $stateUnknown;
		border-color: color($stateUnknown lightness($stateShade) alpha($stateAlpha));
		.status-inner {
			/*background-image: linear-gradient(to top, color($stateUnknown alpha($fadeStart)), color($stateUnknown alpha(50%)) $fadeMid, color($stateUnknown alpha(0%)) $fadeHeight);*/
		}
	}
}
.status.state-not-planned {
	background-color: $stateNotPlannedLight;
	border-color: color($stateNotPlannedLight lightness($stateShade) alpha($stateAlpha));
	@media (min-width: $breakTablet) {
		background-color: $stateNotPlanned;
		border-color: color($stateNotPlanned lightness($stateShade) alpha($stateAlpha));
		.status-inner {
			/*background-image: linear-gradient(to top, color($stateNotPlanned alpha($fadeStart)), color($stateNotPlanned alpha(50%)) $fadeMid, color($stateNotPlanned alpha(0%)) $fadeHeight);*/
		}
	}
}
.status.state-deprecated {
	background-color: $stateDeprecatedLight;
	border-color: color($stateDeprecatedLight lightness($stateShade) alpha($stateAlpha));
	@media (min-width: $breakTablet) {
		background-color: $stateDeprecated;
		border-color: color($stateDeprecated lightness($stateShade) alpha($stateAlpha));
		.status-inner {
			/*background-image: linear-gradient(to top, color($stateDeprecated alpha($fadeStart)), color($stateDeprecated alpha(50%)) $fadeMid, color($stateDeprecated alpha(0%)) $fadeHeight);*/
		}
	}
}
.status.state-under-consideration {
	background-color: $stateConsideringLight;
	border-color: color($stateConsideringLight lightness($stateShade) alpha($stateAlpha));
	@media (min-width: $breakTablet) {
		background-color: $stateConsidering;
		border-color: color($stateConsidering lightness($stateShade) alpha($stateAlpha));
		.status-inner {
			/*background-image: linear-gradient(to top, color($stateConsidering alpha($fadeStart)), color($stateConsidering alpha(50%)) $fadeMid, color($stateConsidering alpha(0%)) $fadeHeight);*/
		}
	}
}
.status.state-in-development {
	background-color: $stateDevelopingLight;
	border-color: color($stateDevelopingLight lightness($stateShade) alpha($stateAlpha));
	@media (min-width: $breakTablet) {
		background-color: $stateDeveloping;
		border-color: color($stateDeveloping lightness($stateShade) alpha($stateAlpha));
		.status-inner {
			/*background-image: linear-gradient(to top, color($stateDeveloping alpha($fadeStart)), color($stateDeveloping alpha(50%)) $fadeMid, color($stateDeveloping alpha(0%)) $fadeHeight);*/
		}
	}
}
.status.state-shipped {
	background-color: $stateShippedLight;
	border-color: color($stateShippedLight lightness($stateShade) alpha($stateAlpha));
	@media (min-width: $breakTablet) {
		background-color: $stateShipped;
		border-color: color($stateShipped lightness($stateShade) alpha($stateAlpha));
		.status-inner {
			/*background-image: linear-gradient(to top, color($stateShipped alpha($fadeStart)), color($stateShipped alpha(50%)) $fadeMid, color($stateShipped alpha(0%)) $fadeHeight);*/
		}
	}
}
.status-text {
	@extend truncate-text;
	font-size: $smallFontSize;
	display: none;
	@media (min-width: $breakDesktop) {
		font-size: $fontSize;
	}
}
@media (min-width: $breakTablet) {
	.feature:hover, .feature:focus {
		.status-text {
			display: block;
		}
	}
}
.status-version {
	color: $stateShipped;
	@media (min-width: $breakTablet) {
		color: inherit;
	}
}

footer {
	padding: $gutterY $gutterX;
	flex: 1;
	display: flex;
	flex-direction: column-reverse;
	@media (min-width: $breakTablet) {
		padding: calc($gutterY / 2) $gutterX;
		flex-direction: row;
	}
}
footer ul {
	list-style: none;
	margin: 0;
	padding: 0;
	text-align: center;
	margin-bottom: $gutterY;
	@media (min-width: $breakTablet) {
		text-align: left;
		flex: 1;
		margin-bottom: 0;
	}
}
footer li {
	display: inline-block;
	margin: 0;
	padding: 0 $gutterX 0 0;
}
footer p {
	color: $textColorLight;
	margin: 0;
	@media (min-width: $breakTablet) {
		padding-right: $gutterX;
		flex: 1;
	}
}
