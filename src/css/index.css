@import "./variables/index.css";
@import "./fonts.css";

* {
	box-sizing: border-box;
}
html, body {
	margin: 0;
	padding: 0;
}

@import '../../node_modules/mozilla-tabzilla/css/tabzilla.css';

body {
	font-family: $baseFontFamily;
	@extend base-rhythm;
	background: #1e1e21;
	background-image: radial-gradient(ellipse farthest-side at top left, #00549e 0, #000 100%);
	background-size: 100% 500px;
	background-repeat: no-repeat;
	background-position: top center;
}

a {
  color: $linkBlue;
  text-decoration: none;
  &:hover, &:focus, &:active {
    color: $linkBlue;
    text-decoration: underline;
  }
}

.row {
	display: flex;
	justify-content: center;
}
.row-inner {
	min-width: 300px;
	max-width: 1020px;
}
header {
	padding: 0 0 calc($gutterY / 2) $gutterX;
	width: 1000px;
}

h1 {
	@extend h1;
	padding-top: $gutterY;
	margin-bottom: 0;
	letter-spacing: -.035em;
	color: #fff;
	font-weight: 600;
}
h2 {
	font-weight: 300;
	font-size: $h4FontSize;
	padding-top: 0;
	margin: 0 0 $gutterY 0;
	color: $textColorLight;
	font-style: italic;
}

article {
	background-color: #fff;
	color: $textColorPrimary;
}

#features {
	list-style: none;
	margin: calc($gutterY) 0;
	padding: 0;
}

.feature {
	margin: 0;
	padding: 0;
	padding-left: $gutterX;
	@media (min-width: $breakMobileLandscape) {
		padding: calc($gutterX / 2) $gutterX;
	}
}
.feature:hover, .feature:focus {
	outline: none;
	background-color: $backgroundLightWarm;
}
.feature-header {
	display: flex;
	flex-direction: row;
  min-width: 0;
}
.feature-title {
	flex: 1;
	@extend is-truncated;
	@extend h5;
	padding-top: 0;
	margin-bottom: 0;
	line-height: calc($gutterY * 2);
	padding-right: $gutterX;
	@media (min-width: $breakMobileLandscape) {
		font-size: $h3FontSize;
		font-weight: 300;
	}
}

.feature-meta {
	padding-top: calc($gutterY / 2);
	padding-bottom: calc($gutterY / 1.5);
	display: none;
	@media (min-width: $breakMobileLandscape) {
		display: block;
	}
}
@media (max-width: $breakMobileLandscape) {
	.feature:focus .feature-meta {
		display: block;
	}
}
.feature-summary {
	margin: 0;
	padding-bottom: calc($gutterY / 2);
	color: $textColorTertiary;
}
.feature-links {
	ul {
		list-style: none;
		margin: 0;
		padding: 0;
	}
	li {
		display: inline-block;
		margin-right: calc($gutterX / 2);
	}
	a {
		color: $textColorLightWarm;
		&:hover, &:focus, &:active {
			color: $linkBlue;
		}
	}
}
.icon {
	display: inline-block;
	background-position: center;
	background-repeat: no-repeat;
	width: $gutterY;
	height: $gutterX;
	background-size: $gutterX;
}
.icon-spec {
	background-image: url(images/html5.png);
	@media (min-resolution: 2dppx) {
		background-image: url(images/html5@2x.png);
	}
}
.icon-mdn {
	background-image: url(images/mdn.png);
	@media (min-resolution: 2dppx) {
		background-image: url(images/mdn@2x.png);
	}
}
.icon-bugzilla {
	background-image: url(images/bugzilla.png);
	@media (min-resolution: 2dppx) {
		background-image: url(images/bugzilla@2x.png);
	}
}
.icon-samples {
	background-image: url(images/github.png);
	@media (min-resolution: 2dppx) {
		background-image: url(images/github@2x.png);
	}
}

.feature-status ul {
	list-style: none;
	margin: 0;
	padding: 0;
	display: flex;
	flex-direction: row;
	height: calc($gutterY * 2);
}
.status {
	list-style: none;
	margin: 0;
	padding: 0;
	display: flex;
	justify-content: stretch;
	align-items: stretch;
	width: calc($gutterY);
	background-position: 50% calc($gutterY + 1px);
	background-repeat: no-repeat;
	background-size: 16px;
	color: $textColorSecondary;
	font-weight: 700;
	font-size: $smallFontSize;
	text-transform: uppercase;
	border: 1px solid rgba(0, 0, 0, 0);
	@media (min-width: $breakTablet) {
		color: #fff;
		font-weight: 600;
		font-size: $fontSize;
		text-shadow: 0 0 1px rgba(0, 0, 0, 0.8);
		width: calc($gutterY * 4);
		background-size: 32px;
		background-position: 50% calc(($gutterY * 2) / 1.618);
		border-top: none;
	}
	/*&:first-child {
		border-left: none;
	}
	&:last-child {
		border-right: none;
	}*/

	&.state-firefox {
		@media (min-width: $breakTablet) {
			background-size: 48px;
			width: calc($gutterY * 6);
			background-position: 50% calc($gutterY);
		}
	}
	&.state-chrome {
		background-image: url(https://raw.githubusercontent.com/alrra/browser-logos/master/chrome/chrome_64x64.png);
	}
	&.state-firefox {
		background-image: url(https://raw.githubusercontent.com/alrra/browser-logos/master/firefox/firefox_128x128.png);
	}
	&.state-edge {
		background-image: url(https://raw.githubusercontent.com/alrra/browser-logos/master/edge/edge_64x64.png);
	}
	&.state-webkit {
		background-image: url(https://raw.githubusercontent.com/alrra/browser-logos/master/safari/safari_64x64.png);
	}
}
.status-inner {
	flex: 1;
	display: flex;
	justify-content: center;
	align-items: center;
	color: inherit;
	&:hover, &:focus, &:active {
    text-decoration: none;
  }
	height: 61.8%;
}

/* Color wheel for #81bc2e */
/*$stateUnknown: #bbb;
$stateNotPlanned: #cf4033;
$stateDeprecated: #cf4033;
$stateConsidering: #cf9733;
$stateDeveloping: #c5cc32;
$stateShipped: #81bc2e;*/

/* Color wheel for #ed3c25 */
/*$stateUnknown: #bbb;
$stateNotPlanned: #ed3c25;
$stateDeprecated: #ed3c25;
$stateConsidering: #eda825;
$stateDeveloping: #dce724;
$stateShipped: #7ed321;*/

/* github issue labels */
$stateUnknown: #bbb;
$stateNotPlanned: #e11d21;
$stateDeprecated: #e11d21;
$stateConsidering: #eb6420;
$stateDeveloping: #fbca04;
$stateShipped: #009800;

/* github issue labels, light */
$stateUnknownLight: #bbb;
$stateNotPlannedLight: #f7c6c7;
$stateDeprecatedLight: #f7c6c7;
$stateConsideringLight: #fad8c7;
$stateDevelopingLight: #fef2c0;
$stateShippedLight: #bfe5bf;

$stateShade: -2%;
$stateAlpha: 100%;

.status.state-unknown {
	background-color: $stateUnknownLight;
	border-color: color($stateUnknownLight lightness($stateShade) alpha($stateAlpha));
	@media (min-width: $breakTablet) {
		background-color: $stateUnknown;
		border-color: color($stateUnknown lightness($stateShade) alpha($stateAlpha));
	}
	opacity: 0.6;
}
.status.state-not-planned {
	background-color: $stateNotPlannedLight;
	border-color: color($stateNotPlannedLight lightness($stateShade) alpha($stateAlpha));
	@media (min-width: $breakTablet) {
		background-color: $stateNotPlanned;
		border-color: color($stateNotPlanned lightness($stateShade) alpha($stateAlpha));
	}
}
.status.state-deprecated {
	background-color: $stateDeprecatedLight;
	border-color: color($stateDeprecatedLight lightness($stateShade) alpha($stateAlpha));
	@media (min-width: $breakTablet) {
		background-color: $stateDeprecated;
		border-color: color($stateDeprecated lightness($stateShade) alpha($stateAlpha));
	}
}
.status.state-under-consideration {
	background-color: $stateConsideringLight;
	border-color: color($stateConsideringLight lightness($stateShade) alpha($stateAlpha));
	@media (min-width: $breakTablet) {
		background-color: $stateConsidering;
		border-color: color($stateConsidering lightness($stateShade) alpha($stateAlpha));
	}
}
.status.state-in-development {
	background-color: $stateDevelopingLight;
	border-color: color($stateDevelopingLight lightness($stateShade) alpha($stateAlpha));
	@media (min-width: $breakTablet) {
		background-color: $stateDeveloping;
		border-color: color($stateDeveloping lightness($stateShade) alpha($stateAlpha));
	}
}
.status.state-shipped {
	background-color: $stateShippedLight;
	border-color: color($stateShippedLight lightness($stateShade) alpha($stateAlpha));
	@media (min-width: $breakTablet) {
		background-color: $stateShipped;
		border-color: color($stateShipped lightness($stateShade) alpha($stateAlpha));
	}
}
.status-text {
	@extend is-truncated;
	font-size: $smallFontSize;
	display: none;
	@media (min-width: $breakTablet) {
		display: block;
	}
}
.status-version {
	color: $stateShipped;
	@media (min-width: $breakTablet) {
		color: inherit;
	}
}
